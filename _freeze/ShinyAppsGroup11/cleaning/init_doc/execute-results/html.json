{
  "hash": "41fdc113df49ff6638215dce39d1cb64",
  "result": {
    "markdown": "---\ntitle: init_doc\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidygraph, tidyverse, ggraph, ggiraph, visNetwork, graphlayouts, ggforce, tidytext, skimr, treemap, ggdist, RColorBrewer)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_data <- fromJSON(\"data/MC3.json\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes <- as_tibble(mc3_data$nodes) %>%\n  distinct() %>% # Remove duplicate rows\n  mutate(country = as.character(country),             # Convert to character type\n         id = as.character(id),                       # Convert to character type\n         product_services = as.character(product_services),   # Convert to character type\n         revenue_omu = as.numeric(ifelse(revenue_omu == \"Unknown\" | revenue_omu == \"NULL\", 0, revenue_omu)),\n         type = as.character(type)                    # Convert to character type\n  ) %>%\n  select(id,country,type,revenue_omu,product_services)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n#Extracting edges\nmc3_edges_raw <- as_tibble(mc3_data$links) %>% \n  distinct() %>% # Remove duplicate rows\n  mutate(source = as.character(source), # Convert to character type\n         target = as.character(target), # Convert to character type\n         type = as.character(type)) %>% # Convert to character type\n  rename(from = source,\n         to = target) %>% #ensure compatibility with `tidygraph` functions\n  group_by(from, to, type) %>%\n    summarise(weights = n()) %>%\n  filter(from!=to) %>% #to ensure that no record with similar source and target.\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'from', 'to'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_group <- mc3_nodes %>% #given some companies/nodes have multiple rows in different countries\n  group_by(id) %>%\n  summarize(total_revenue_omu = sum(revenue_omu, na.rm = TRUE))\n\n#Extracting edges\nmc3_edges <- mc3_edges_raw %>% \n  left_join(mc3_nodes_group, by = c(\"from\" = \"id\")) %>% \n  select(from, to, type, weights, total_revenue_omu) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- mc3_edges %>%\n  group_by(to) %>%\n  rename(id = to) %>%\n  summarize(total_revenue_omu = sum(total_revenue_omu, na.rm = TRUE),\n            companies_owned = sum(type == \"Beneficial Owner\"),\n            companies_contact = sum(type == \"Company Contacts\"),\n            total_relation = companies_owned+companies_contact)%>%\n  arrange(desc(total_relation)) #sort total_relation by descending\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nid1 <- mc3_edges %>% # extract the source column from the edges dataframe and rename it to id1\n  select(from) %>%\n  rename(id = from)\n\nid2 <- mc3_edges %>% # extract the target column from the edges dataframe and rename it to id2\n  select(to) %>%\n  rename(id = to)\n\nmc3_nodes1 <- rbind(id1, id2) %>% # combine the id1 and id2 dataframes \n  distinct() %>% # remove the duplicates\n  left_join(mc3_nodes, by = \"id\",\n            unmatched = \"drop\") %>%\n  left_join(summary_data, by = \"id\") %>%\n  replace_na(list(companies_owned = 0, companies_contact = 0, total_relation = 0))%>% #replace NA values with 0\n  mutate(new_type = ifelse(companies_owned>0 & companies_contact>0, \"Beneficial Owner + Company Contact\",ifelse(companies_owned>0 & companies_contact==0, \"Beneficial Owner\", ifelse(companies_owned==0 & companies_contact>0, \"Company Contact\",NA_character_)))) %>%\n  mutate(revenue_omu = ifelse(is.na(revenue_omu), 0, revenue_omu))\n#create new attributes for node\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# create a graph from the nodes and edges dataframes\nmc3_graph <- tbl_graph(nodes = mc3_nodes1,\n                       edges = mc3_edges,\n                       directed = FALSE) %>%\n  mutate(betweenness_centrality = centrality_betweenness(), #additional node attribute\n         closeness_centrality = ifelse(is.nan(centrality_closeness()),0,centrality_closeness()), #additional node attribute\n         degree_centrality = centrality_degree())  %>% #additional node attribute\n  mutate(community = as.factor(group_fast_greedy(weights = weights))) #community measure\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nnodes_df <- mc3_graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rename(name = id) %>%\n  mutate(id=row_number())\n\nedges_df <- mc3_graph %>%\n  activate(edges) %>%\n  as_tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Manual configuration of the nodes' attribute for graph visualisation\nnodes_df2 <- nodes_df %>%\n  #filter(betweenness_centrality >= quantile(betweenness_centrality, 0.995))  %>%\n  mutate(color = case_when(\n    new_type == \"Beneficial Owner\" ~ \"#026873\",\n    new_type == \"Company Contact\" ~ \"#026873\",\n    new_type == \"Beneficial Owner + Company Contact\" ~ \"#026873\",\n    is.na(new_type) ~ \"#4B4952\",\n    TRUE ~ \"#4B4952\"\n  ),\n         title = paste0(\"<br><span style='color: black;'><b>\",id, \": \", name,\"<br></b>\",\"Companies Owned:\", companies_owned,\"</br>\", \"Companies Contact to:\", companies_contact,\"</span><p>\"),\n         label = name)\n         #size = ifelse(total_relation == 0,10,total_relation*10))\n\nedges_df2 <- edges_df %>%\n  mutate(color = ifelse(type == 'Beneficial Owner', \"#D94F04\",\"#3E7C59\")\n         )\n```\n:::\n\n\n### 0. Export in CSV\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(mc3_nodes1, file = \"data/mc3_nodes1.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(mc3_nodes1, file = \"data/mc3_nodes2.csv\")\n```\n:::\n\n\n### 1.1 Distribution of Count per Top 3 countries Panel Tab 1\n\nexport\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes1_Other <- mc3_nodes1 %>%\n  filter(!is.na(country)) %>%\n  group_by(country) %>%\n  summarise(counts = n()) %>%\n  arrange(desc(counts)) %>%\n  mutate(country = ifelse(row_number() > 3, \"Other\", country)) %>%\n  group_by(country) %>%\n  summarise(counts = sum(counts)) %>%\n  mutate(counts = as.numeric(counts)) %>%\n  arrange(desc(counts)) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes1_Other %>%\n  arrange(desc(counts)) %>%\n  ggplot(aes(x = reorder(country, -counts), y = counts)) +\n  geom_bar(stat = \"identity\", fill = '#3498db') +\n  geom_text(aes(label = format(counts,big.mark=\",\")), vjust = -0.5) +\n  theme_minimal() +\n  labs(x = \"Country\", y = \"Counts\",\n       title = 'Count of Nodes by Country',\n       subtitle = 'ZH, Oceanus, and Marebak were the top 3 countries where most nodes domiciled') +\n  theme(axis.title.y = element_text(angle = 0, vjust = 0.5, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### 1.2 Distribution of Revenue per Top 3 countries Paenl tab 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes1 %>%\n  filter(!is.na(country)) %>%\n  group_by(country) %>%\n  summarise(revenue_omu = sum(revenue_omu)) %>%\n  arrange(desc(revenue_omu)) %>%\n  mutate(country = ifelse(row_number() > 3, \"Other\", country)) %>%\n  group_by(country) %>%\n  summarise(revenue_omu = sum(revenue_omu)) %>%\n  ggplot(aes(x = reorder(country, -revenue_omu), y = revenue_omu)) +\n  geom_histogram(stat = \"identity\", fill = '#3498db') +\n  geom_text(aes(label = format(revenue_omu,big.mark=\",\")), vjust = -0.5) +\n  scale_y_continuous(labels = function(x) format(x/1000000, nsmall = 1, big.mark = \".\", decimal.mark = \",\"))+\n  theme_minimal() +\n  labs(x = \"Country\", y = \"Revenue in mil\",\n       title = 'Distribution of Revenue by Country',\n       subtitle = 'ZH, Rio Isla, and Utoporiana were the top 3 countries where most revenue was generated') +\n  theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_histogram(stat = \"identity\", fill = \"#3498db\"): Ignoring\nunknown parameters: `binwidth`, `bins`, and `pad`\n```\n:::\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### 2 Distribution of Company located in multiple countries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  mc3_nodes1 %>%\n  group_by(id) %>%\n  summarise(total_countries = n_distinct(country)) %>%\n  filter(total_countries > 3) %>%\n  arrange(desc(total_countries)) %>%\n  ggplot(aes(x = id, y = total_countries)) +\n  geom_bar(stat = \"identity\", fill = '#3498db') +\n  geom_text(aes(label = format(total_countries, big.mark=\",\")), vjust = -0.5) +\n  theme_minimal() +\n  labs(x = \"Companies\", y = \"Number of Countries\",\n       title = 'Distribution of Company located in multiple countries',\n       subtitle = 'Aqua Aura SE Marine is the most diversified in terms of countries locations') +\n  scale_y_continuous(breaks = seq(0, 10, by = 2),\n                     labels = seq(0, 10, by = 2))\n```\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1, \n                                   size = 10, margin = margin(t = 0.2, r = 0, b = 0, l = 0)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ axis.title.y:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : num 10\n  ..$ hjust        : num 1\n  ..$ vjust        : num 1\n  ..$ angle        : num 30\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n```\n:::\n:::\n\n\n### 3 Distribution of Individuals who own the most of amount of companies\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  mc3_nodes1 %>%\n  group_by(id) %>%\n  filter(total_relation > 8) %>%\n  arrange(desc(total_relation)) %>%\n  ggplot(aes(reorder(x = id, -total_relation), y = total_relation)) +\n  geom_bar(stat = \"identity\", fill = '#3498db') +\n  geom_text(aes(label = format(total_relation, big.mark=\",\")), vjust = -0.5) +\n  theme_minimal() +\n  labs(x = \"Companies\", y = \"Number of relationships\",\n       title = 'Distribution of Individuals who have the most amount of Company relationships') +\n  scale_y_continuous(breaks = seq(0, 10, by = 2),\n                     labels = seq(0, 10, by = 2))\n```\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 1)) +\n  theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1, \n                                   size = 10, margin = margin(t = 0.2, r = 0, b = 0, l = 0)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ axis.title.y:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : num 10\n  ..$ hjust        : num 1\n  ..$ vjust        : num 1\n  ..$ angle        : num 30\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n```\n:::\n:::\n\n\n### Chart from Hailey's\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get number of type by source (Company)\nnodes_count <- mc3_nodes %>%\n  group_by(id, type) %>%\n  summarise(count = n()) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'id'. You can override using the `.groups`\nargument.\n```\n:::\n\n```{.r .cell-code}\n# Plot strip chart to show distibution\n\nnodes_count %>%\n  ggplot(\n    aes(x = count, \n        y = type)\n  ) +\n  geom_point(\n    alpha = .2, \n    size = 7\n  ) +\n  scale_x_continuous() +  \n  stat_summary(\n    color = \"salmon\", \n    fun = \"median\", \n    geom = \"point\", \n    size = 3.5, \n    alpha = .9\n  ) +\n  labs(title = \"Higher Number of Beneficial Owners Indicative of Publicly Listed Companies\",\n       subtitle = \"Highlighted points represent median values\",\n       x = NULL,\n       y = NULL\n  ) +\n  theme(axis.ticks.y = element_blank(),\n        plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  )\n```\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n#From Hailey's\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Only feature data from Companies\ncompany_nodes <- mc3_nodes1 %>%\n  filter(type == \"Company\")\n\ncompany_rev <-\n  ggplot(company_nodes, \n       aes(x = 1, \n           y = revenue_omu)\n  ) +\n  geom_point(\n    color = \"#1696d2\",\n    alpha = .5\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n=5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Skewed Distribution of Revenue Suggests unreported revenue or company sizes\"\n  ) +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    plot.background = element_rect(fill=\"#F8F3E6\",colour=\"#F8F3E6\")\n  ) +\n  coord_flip()\n\ncompany_rev\n```\n\n::: {.cell-output-display}\n![](init_doc_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## 3. summary of summary data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data2 <- summary_data %>%\n  filter(total_relation>1) \n\nskim(summary_data2) \n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |              |\n|:------------------------|:-------------|\n|Name                     |summary_data2 |\n|Number of rows           |1962          |\n|Number of columns        |5             |\n|_______________________  |              |\n|Column type frequency:   |              |\n|character                |1             |\n|numeric                  |4             |\n|________________________ |              |\n|Group variables          |None          |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|id            |         0|             1|   7|  22|     0|     1962|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|      mean|         sd| p0| p25|      p50|      p75|      p100|hist  |\n|:-----------------|---------:|-------------:|---------:|----------:|--:|---:|--------:|--------:|---------:|:-----|\n|total_revenue_omu |         0|             1| 827480.44| 9794417.74|  0|   0| 25094.85| 118683.8| 286860134|▇▁▁▁▁ |\n|companies_owned   |         0|             1|      1.68|       0.96|  0|   1|     2.00|      2.0|         9|▆▇▁▁▁ |\n|companies_contact |         0|             1|      0.73|       0.76|  0|   0|     1.00|      1.0|         5|▇▁▁▁▁ |\n|total_relation    |         0|             1|      2.41|       0.92|  2|   2|     2.00|      3.0|        11|▇▁▁▁▁ |\n:::\n:::\n\n\n#### (for individuals with total relation \\>1) Median of Companies owned = 2,\n\n## Median of COmpany contacts = 1\n\n## median of revenue = 25K\n",
    "supporting": [
      "init_doc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}