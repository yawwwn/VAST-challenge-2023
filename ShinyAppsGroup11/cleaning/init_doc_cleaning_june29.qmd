```{r}

library(conflicted)
library(tidyverse)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::lag)
library(jsonlite)
library(DT)
library(data.table)
library(tidytext)
library(plotly)
library(ldatuning)
library(wordcloud2)
library(topicmodels)
library(gt)
library(ggplot2)
library(bulletr)
library(ggthemes)
library(gtExtras)
library(ggiraph)
library(hrbrthemes)
```

```{r}
MC3_challenge <- fromJSON("C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/data/MC3.json")

#extracting edges 
MC3_edges_raw <-as_tibble(MC3_challenge$links) %>%
  distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  rename(from = source,
         to = target) %>%
  group_by(from, to, type) %>%
  summarise(weights = n()) %>%
  filter (from != to) %>%
  ungroup()

#extrading nodes 
MC3_nodes <-as_tibble(MC3_challenge$nodes) %>%
  mutate(country = as.character(country),
         id = as.character(id),
         product_services = as.character(product_services),
         revenue_omu = as.numeric(as.character(revenue_omu)),
         type = as.character(type)) %>%
  select(id,country,type,revenue_omu,product_services)

MC3_nodes_group <- MC3_nodes %>% #given some companies/nodes have multiple rows in different countries
  group_by(id) %>%
  summarize(total_revenue_omu = sum(revenue_omu, na.rm = TRUE))

MC3_edges <- MC3_edges_raw %>%
  left_join(MC3_nodes_group, by = c("from" = "id")) %>%
  select(from, to, type, weights, total_revenue_omu)

#default masterlist 
id1 <- MC3_edges %>%
  select(from) %>%
  rename(id = from)
id2 <- MC3_edges %>%
  select(to) %>%
  rename(id = to)
MC3_nodes_master <- rbind(id1, id2) %>%
  distinct() %>%
  left_join(MC3_nodes,
            unmatched = "drop")

#create new node df to include id number
MC3_nodes_Masterlist <- MC3_nodes_master %>%
  select(id) %>%
  distinct() %>%
  rename(label = id) %>%
  ungroup()

#add ID to nodes dataframe
MC3_masternodes <- MC3_nodes_Masterlist %>%
  mutate(id = as.character(1:nrow(MC3_nodes_Masterlist))) %>%
  relocate(id,label) %>%
  ungroup()

```

## Country count plot

```{r}
MC3_nodes_Other <- MC3_nodes_master %>%
      filter(!is.na(country)) %>%
      group_by(country) %>%
      summarise(counts = n()) %>%
      arrange(desc(counts)) %>%
      mutate(country = ifelse(row_number() > 3, "Other", country)) %>%
      group_by(country) %>%
      summarise(counts = sum(counts)) %>%
      mutate(counts = as.numeric(counts)) %>%
      arrange(desc(counts))

#create tooltip to display total count 
    MC3_nodes_Other$tooltip <-c(paste0("Count: ", MC3_nodes_Other$counts))

#tool_tip design
    tooltip_css <- "background-color: lightgrey; #<<
    font-style:bold; color: #446455;" #<<

#create interactive column plot
      
  r1<-  ggplot(MC3_nodes_Other, aes(x = reorder(country, -counts), y = counts)) +
      geom_text(aes(label = format(counts, big.mark = ",")), vjust = -0.5) +
      geom_col_interactive(aes(tooltip = MC3_nodes_Other$tooltip)) +
      theme_ipsum() +
      ylim(0,5000) +
      labs(x = "Country", y = "Counts",
           title = 'Count of Nodes by Country',
           subtitle = 'ZH, Oceanus, and Marebak were the top 3 countries where most nodes domiciled') +
      theme(axis.title.y = element_text(angle = 0, vjust = 0.5, hjust = 1))
    
  girafe(                                  
    ggobj = r1,                         
    width_svg = 8,                         
    height_svg = 6*0.618,
    options = list( #<<
      opts_tooltip(css = tooltip_css), #<<
      opts_hover_inv(css = "opacity:0.1;") #<<
    )                                        
  )    
```

## Revenue plot

```{r}
write.csv(MC3_nodes_master, file = "C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/cleaning/data/MC3_nodes_master.csv")
```

```{r}
      MC3_nodes_master_revenue <- MC3_nodes_master %>%
      filter(!is.na(country)) %>%
      filter(!is.na(revenue_omu)) %>%
      group_by(country) %>%
      summarise(total_revenue = sum(revenue_omu)) %>%
      mutate(total_revenue = as.numeric(total_revenue)) %>%
      arrange(desc(total_revenue)) %>%
      mutate(country = ifelse(row_number() <= 3, country, "Other")) %>%
      group_by(country) %>%
      summarise(total_revenue = sum(total_revenue)) %>%
      arrange(desc(total_revenue)) 
      
#create tooltip to display total count 
    MC3_nodes_master_revenue$tooltip <-c(paste0("Revenue: ", MC3_nodes_master_revenue$total_revenue))

#tool_tip design
    tooltip_css <- "background-color: lightgrey; #<<
    font-style:bold; color: #446455;" #<<

#create interactive column plot

      r2 <- ggplot(MC3_nodes_master_revenue, aes(reorder(country, -total_revenue), y = total_revenue)) +
      geom_text(aes(label = format(total_revenue, big.mark = ",")), vjust = -0.5) +
      scale_y_continuous(labels = function(x) format(x/1000000, nsmall = 1, big.mark = ".", decimal.mark = ",")) +
      geom_col_interactive(aes(tooltip = MC3_nodes_master_revenue$total_revenue)) +
      theme_ipsum() +
      labs(x = "Country", y = "Revenue in mil",
           title = 'Distribution of Revenue by Country',
           subtitle = 'ZH, Rio Isla, and Utoporiana were the top 3 countries where most revenue was generated') +
      ylim(0,2150000000) +
      theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 0.9))
      
      
    girafe(                                  
      ggobj = r2,                         
      width_svg = 8,                         
      height_svg = 6*0.618,
      options = list( #<<
        opts_tooltip(css = tooltip_css), #<<
        opts_hover_inv(css = "opacity:0.1;") #<<
      )                                        
    )    
  
```

```{r}
write.csv(MC3_nodes_master_revenue, file = "C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/cleaning/data/MC3_nodes_master_revenue.csv")
```

## Company Plot

```{r}
   MC3_nodes_master %>%
      group_by(id) %>%
      summarise(total_countries = n_distinct(country)) %>%
      filter(total_countries > 3) %>%
      arrange(desc(total_countries)) %>%
      ggplot(aes(x = id, y = total_countries)) +
      geom_bar(stat = "identity", fill = '#3498db') +
      geom_text(aes(label = format(total_countries, big.mark=",")), vjust = -0.5) +
      theme_minimal() +
      labs(x = "Companies", y = "Number of Countries",
           title = 'Distribution of Company located in multiple countries',
           subtitle = 'Aqua Aura SE Marine is the most diversified in terms of countries locations') +
      scale_y_continuous(breaks = seq(0, 10, by = 2),
                         labels = seq(0, 10, by = 2))+
      theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
      theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1, 
                                       size = 10, margin = margin(t = 0.2, r = 0, b = 0, l = 0)))
  
```

```{r}
# Create a data table from the df data frame
dt <- data.table(MC3_nodes_master)


# Create a new data table with the count of types for each id
MC3_nodes_master_count <- dt[, .N, by = c("id", "type")]

# Reshape the data table to have type values as columns and group by ID in rows
wide_dt <- dcast(MC3_nodes_master_count, id ~ type, value.var = "N")

# Replace NA values with 0
wide_dt[is.na(wide_dt)] <- 0


wide_dt[, N := rowSums(.SD), .SDcols = -"id"]

wide_dt <- wide_dt[order(-N)]
wide_dt[, "NA" := NULL]
datatable(wide_dt)

```

## Ownership Plot

```{r}


summary_data <- MC3_edges %>%
  group_by(to) %>%
  rename(id = to) %>%
  summarize(total_revenue_omu = sum(total_revenue_omu, na.rm = TRUE),
            companies_owned = sum(type == "Beneficial Owner"),
            companies_contact = sum(type == "Company Contacts"),
            total_relation = companies_owned+companies_contact)%>%
  arrange(desc(total_relation)) #sort total_relation by descending

summary_data %>%
      group_by(id) %>%
      filter(total_relation > 8) %>%
      arrange(desc(total_relation)) %>%
      ggplot(aes(reorder(x = id, -total_relation), y = total_relation)) +
      geom_bar(stat = "identity", fill = '#3498db') +
      geom_text(aes(label = format(total_relation, big.mark=",")), vjust = -0.5) +
      theme_minimal() +
      labs(x = "Companies", y = "Number of relationships",
           title = 'Distribution of Individuals who have the most amount of Company relationships') +
      scale_y_continuous(breaks = seq(0, 10, by = 2),
                         labels = seq(0, 10, by = 2))+
      theme(axis.title.y = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
      theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1, 
                                       size = 10, margin = margin(t = 0.2, r = 0, b = 0, l = 0)))
```

```{r}
write.csv(summary_data, file = "C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/cleaning/data/summary_data.csv")
```

```{r}
datatable(summary_data, filter = 'top', options = list(order = list(list(3, 'desc'))))
```

## tokenisation

```{r}
#word related code from this line
#unnest words
token_nodes <- MC3_nodes %>%
  unnest_tokens(word, product_services)

#remove stop_words
stopwords_removed <- token_nodes %>% 
  anti_join(stop_words)

#remove generic words 
remove_characters <- c("character", "0","unknown","products","services",
                       "including", "source", "offers","range", "related")

#create dataframe of each word with frequency 
stopwords_removed_freq <- stopwords_removed %>%
  filter(!word %in% remove_characters) %>%
  group_by(word) %>%
  summarize(count = n()) %>%
  arrange(desc(count)) %>%
  ungroup()
```

```{r}
library(topicmodels)

token_nodes %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")
```

```{r}
token_nodes$word[token_nodes$word == "character"] <- "NA"
token_nodes$word[token_nodes$word == "0"] <- "NA"

#remove stop_words
stopwords_removed <- token_nodes %>% 
  anti_join(stop_words) %>%
  filter(!word %in% c("NA", "unknown", "products"))

dim(stopwords_removed)

stopwords_removed %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
      labs(x = "Count",
      y = "Unique words",
      title = "Count of unique words found in product_services field")

```

```{r}
write.csv(stopwords_removed, file = "C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/cleaning/data/stopwords_removed.csv")
```

```{r}
# using as.matrix()
MC3_text <- stopwords_removed %>%
  count(id, word) %>%  # count each word used in each identified review 
  cast_dtm(id, word, n) %>%  # use the word counts by reviews  to create a DTM
  as.matrix()

# create models with different number of topics
result <- ldatuning::FindTopicsNumber(
  MC3_text,
  topics = seq(from = 2, to = 10, by = 1),
  metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
  method = "Gibbs",
  control = list(seed = 77),
  verbose = TRUE
)

```

```{r}
FindTopicsNumber_plot(result)
```

```{r}
# number of topics
K <- 4
# set random number generator seed
set.seed(1234)
# compute the LDA model, inference via 1000 iterations of Gibbs sampling
topicModel <- LDA(MC3_text, K, method="Gibbs", control=list(iter = 500, verbose = 25))
```

```{r}
lda_topics <- topicModel %>%
  tidy(matrix = "beta")

lda_topics <- LDA(
  MC3_text,
  K,
  method = "Gibbs",
  control = list(seed=42)
  ) %>%
  tidy(matrix = "beta")

word_probs <- lda_topics %>%
  group_by(topic) %>%
  top_n(15, beta) %>%
  ungroup() %>%
  mutate(term2 = fct_reorder(term, beta))

ggplot(
  word_probs,
  aes(term2, beta, fill=as.factor(topic))
  ) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  coord_flip()
```

```{r}
library(knitr)
library(hrbrthemes)
```

```{r}
library(RColorBrewer)
library(ggiraph)

#analyze company based on topic 
stopwords_removed_join <- stopwords_removed %>%
  left_join(word_probs, by = c("word" = "term2"), unmatched= "drop") %>%
  na.omit()
```

```{r}
#select and aggregate
company_bytopic <- stopwords_removed_join %>%
  select(id,topic,type) %>%
  group_by(id,topic,type) %>%
  summarize(count = n()) %>%
  arrange(desc(count)) %>%
  ungroup()
```

```{r}
#search for distinct id 
company_by_topic_user <- company_bytopic %>%
  filter(id == "Assam   Limited Liability Company") %>%
  ungroup()

#create tooltip to display total count 
company_by_topic_user$tooltip <-c(paste0(
  "Count: ", company_by_topic_user$count))

#tool_tip design
tooltip_css <- "background-color: lightgrey; #<<
font-style:bold; color: #446455;" #<<

#create a bar chart based on distributio of topic by ID
app <- ggplot(company_by_topic_user,
              aes(x= topic, y= count)) +
  geom_bar_interactive(aes(tooltip= company_by_topic_user$tooltip), 
                       width =1, stat = "identity") +
  scale_fill_brewer(palette= "Dark2") + #to standardize color theme
  labs(title = "Distribution of Topic by ID",
       x = "Topic Group", y= "Count") +
  theme_ipsum() +
  theme(plot.title = element_text(hjust = 0.5)) #align the title 

girafe(                                  
  ggobj = app,                             
  width_svg = 8,                         
  height_svg = 6*0.618,
  options = list( #<<
    opts_tooltip(css = tooltip_css), #<<
    opts_hover_inv(css = "opacity:0.1;") #<<
  )      
)
```

```{r}
write.csv(stopwords_removed_join, file = "C:/junsok21/VAST2023_Group11/ShinyAppsGroup11/cleaning/data/stopwords_removed_join.csv")
```

```{r}
dataforbullet <- stopwords_removed_join %>%
  group_by(`topic`) %>%
  summarise('Average Revenue of Each topic vs Global Average' = mean(revenue_omu))

targetforbullet <- mean(stopwords_removed_join$revenue_omu)

dataforbullet <- dataforbullet %>%
  mutate(target = targetforbullet)

dataforbullet
            

```

```{r}

dataforbullet %>%
  gt::gt() %>%
  gt_plt_bullet(column = 'Average Revenue of Each topic vs Global Average', 
              target = target, 
              width = 60,
              palette = c("lightblue", 
                          "black")) %>%
  tab_header(title = "Comparison of average revenue of each topic vs. all topics") %>%
  gt_theme_538()


```
